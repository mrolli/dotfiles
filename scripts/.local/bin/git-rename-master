#!/usr/bin/env bash
# Usage: gh-rename-master <newbranch> [<remote>]
#
# Renames the "master" branch of the current repository both locally and on GitHub.
#
# dependencies: GitHub CLI v0.10
#
# See https://gist.github.com/mislav/5ac69530acbe1b4ca909e272caabfdba
#
# Added commands to delete the local and remote master, but commented
# out and print hint about the old branches
set -e

if [ $# -eq 0 ]
then
  echo "Usage: $(basename $0) <branchname> [<remote>]"
  exit 1
fi

newbranch="${1}"
remote="${2:-origin}"

git fetch "$remote" master
git checkout -b "$newbranch" "${remote}/master" --no-track
git push -u "$remote" "$newbranch"
git remote set-head "$remote" "$newbranch"

# update the default branch
gh api -XPATCH "repos/:owner/:repo" -f default_branch="$newbranch" >/dev/null

# update the base branch of all open pull requests
for num in `gh pr list -B master -L999 | cut -f1`; do
  gh api -XPATCH "repos/:owner/:repo/pulls/${num}" -f base="$newbranch" >/dev/null
  echo -n .
done

#git branch -d master
#git push origin --delete master

printf '\nDone!\nManually delete the master branches locally and remotely as soon as you see fit\n'

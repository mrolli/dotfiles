#!/usr/bin/osascript
on run
  if application "Music" is running and application "Spotify" is not running then
    tell application "Music"
      if player state is stopped then
        set display to "No Track Playing"
      else
        set track_artist to artist of current track
        set track_name to name of current track
        set track_duration to duration of current track
        set seconds_played to player position
        set state to ""
        if player state is paused then
            set state to " "
        else
            set state to "契"
        end if

        set display to state & track_artist & " - " & track_name & " - " & (round ((seconds_played / track_duration) * 100)) & "%"
      end if
    end tell
  else if application "Spotify" is running and application "Music" is not running then
    tell application "Spotify"
      if player state is stopped then
        set display to "No Track Playing"
      else
        set track_artist to artist of current track
        set track_name to name of current track
        set track_duration to duration of current track
        set seconds_played to player position
        set state to ""
        if player state is paused then
            set state to " "
        else
            set state to "契"
        end if

        set display to state & track_artist & " - " & track_name
      end if
    end tell
  else if application "Spotify" is running and application "Music" is running then
    --Get current states of Music and Spotify
    tell application "Music" to set MusicState to (player state as text)
    tell application "Spotify" to set spotifyState to (player state as text)

    if (MusicState is "paused" or MusicState is "stopped") and spotifyState is "playing" then
      tell application "Spotify"
        if player state is stopped then
          set display to "No Track Playing"
        else
          set track_artist to artist of current track
          set track_name to name of current track
          set track_duration to duration of current track
          set seconds_played to player position
          set state to ""
          if player state is paused then
              set state to " "
          else
              set state to "契"
          end if

          set display to state & track_artist & " - " & track_name
        end if
      end tell
    else if MusicState is "playing" and (spotifyState is "paused" or spotifyState is "stopped") then
      tell application "Music"
        if player state is stopped then
          set display to "No Track Playing"
        else
          set track_artist to artist of current track
          set track_name to name of current track
          set track_duration to duration of current track
          set seconds_played to player position
          set state to ""
          if player state is paused then
              set state to " "
          else
              set state to "契"
          end if

          set display to state & track_artist & " - " & track_name & " - " & (round ((seconds_played / track_duration) * 100)) & "%"
        end if
      end tell
    else if (MusicState is "paused" or MusicState is "stopped") and spotifyState is "paused" then
      set display to "No Track Playing"
    else
      set display to "Crazyman!!!!"
    end if
  else
    set display to "No music app is running"
  end if
end run

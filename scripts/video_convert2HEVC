#!/usr/bin/env bash

die() {
  printf '%s\n' "$1" >&2
  exit 1
}

# Check if ffmpeg is installed
command -v ffmpeg >/dev/null || (echo "ffmpeg is required but found" && exit 1)

# Print usage if no input file is given
[ $# -eq 0 ] && echo "Usage: ${0} FILE [DESTDIR]" && exit 1

# basedir to convert to; defaults to pwd
basedir=$(pwd)
crf=28
preset=faster

# Option parsing
while :; do
  case $1 in
    -h|-\?|--help)
      print_usage
      exit 0
      ;;
    -b|--basedir)
      if [ "$2" ]
      then
        basedir=$2
        shift
      else
        die 'ERROR: "--file" requires a non-empty option argument.'
      fi
      ;;
    --basedir=?*)
      basedir=${1#*=}
      ;;
    --basedir=)
      die 'ERROR: "--file" requires a non-empty option argument.'
      ;;
    -c|--crf)
      if [ "$2" ]
      then
        crf=$2
        shift
      else
        die 'ERROR: "--crf" requires a non-empty option argument.'
      fi
      ;;
    --crf=?*)
      crf=${1#*=}
      ;;
    --crf=)
      die 'ERROR: "--crf" requires a non-empty option argument.'
      ;;
    -p|--preset)
      if [ "$2" ]
      then
        preset=$2
        shift
      else
        die 'ERROR: "--preset" requires a non-empty option argument.'
      fi
      ;;
    --preset=?*)
      preset=${1#*=}
      ;;
    --preset=)
      die 'ERROR: "--preset" requires a non-empty option argument.'
      ;;
    --)
      shift
      break
      ;;
    -?*)
      printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2
      ;;
    *)
      break
  esac

  shift
done

# Fail if input file is not available
[ ! -f $1 ] && echo "Video input file not found ${1}" && exit 1

realfilepath=$(realpath $1)
origfilename=$(basename $realfilepath)
origtitle=$(basename $(dirname $realfilepath))
newtitle=${origtitle%-*}-FutGH
newtitle=${newtitle/x264/x265}
ext=${origfilename##*.}

targetdir=$newtitle
targetfile=$newtitle.$ext

# Generate target directory
mkdir -p "${basedir}/${targetdir}"
echo "${origtitle}" > "${basedir}/${targetdir}/source.nfo"

# Convert
echo "--- Conversion of ${origtitle} started - $(date)"
echo "Recoding video using libx265 with crf ${crf} and preset ${preset}"
time ffmpeg -analyzeduration 5000M \
            -probesize 5000M \
            -i "${realfilepath}" \
            -map 0:v \
            -map 0:a \
            -map 0:s? \
            -c:v copy \
            -c:v:0 libx265 -crf $crf -preset $preset \
            -c:a copy \
            -c:s copy \
            -tag:v:0 hvc1 \
            "${basedir}/${targetdir}/${targetfile}"
rc=$?
echo "--- Conversion of ${origtitle} ended - $(date)"
exit $rc

exit 0

#!/usr/bin/env bash
#
# bootstrap installs dotfiles and
# runs every installer found..
#

cd "$(dirname "$0")"
DOTFILES_ROOT_ABS=$(pwd -P)

set -e

source $DOTFILES_ROOT_ABS/shell_functions.sh

function link_file() {
  local src=$1 dst=$2

  local overwrite= backup= skip=
  local action=

  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]; then
    if [ "$overwrite_all" == "false" ] && [ "$backup_all" == "false" ] && [ "$skip_all" == "false" ]; then

      local currentSrc="$(readlink $dst)"

      if [ "$currentSrc" == "$src" ]; then
        skip=true;
      else
        user "File already exists: $dst ($(basename "$src")), what do you want to do?\n\
        [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all? "
        read -n 1 action

        case "$action" in
          o )
            overwrite=true;;
          O )
            overwrite_all=true;;
          b )
            backup=true;;
          B )
            backup_all=true;;
          s )
            skip=true;;
          S )
            skip_all=true;;
          * )
            ;;
        esac
      fi
    fi

    overwrite=${overwrite:-$overwrite_all}
    backup=${backup:-$backup_all}
    skip=${skip:-$skip_all}

    if [ "$overwrite" == "true" ]; then
      rm -rf "$dst"
      success "Successfully removed $dst"
    fi

    if [ "$backup" == "true" ]; then
      mv "$dst" "${dst}.backup"
      success "Successfully moved $dst to ${dst}.bak"
    fi

    if [ "$skip" == "true" ]; then
      success "Skipped $src"
    fi
  fi

  if [ "$skip" != "true" ]; then  # "false" or empty
    ln -s "$1" "$2"
    success "Successfully symlinked $1 to $2"
  fi
}

function run_installers() {
  # Start with Homebrew as installers might depend on brew installed software
  [ -x "${DOTFILES_ROOT_ABS}/homebrew/install.sh" ] && "${DOTFILES_ROOT_ABS}/homebrew/install.sh"

  # Find all general and platform-specific installers and execute them
  for installer in ${DOTFILES_ROOT_ABS}/*/install{,.$(uname -s)}.sh
  do
    # Skip Homebrew as it's already done
    [[ "${installer}" =~ homebrew ]] && continue
    bash -c $installer
  done
}

function install_dotfiles() {
  info "Installing dotfiles..."

  # Declare _all variables here
  # This is to preserve the answers as these variables
  # are available in link_file too.
  local overwrite_all=false backup_all=false skip_all=false

  for src in $(find -H "${DOTFILES_ROOT_ABS}" -maxdepth 2 -name "*.symlink" -not -path "*.git*")
  do
    src="${src#$HOME/}"
    dst="${HOME}/.$(basename "${src%.*}")"
    link_file "$src" "$dst"
  done

  # additionally link bin to ~/bin
  link_file "${DOTFILES_ROOT_ABS#$HOM}/bin" "${HOME}/bin"
}

echo ""
user "Shall the installers run (y/n)?"
read -n1 action
case $action in
  "y|Y") info "Running installers..."; run_installers;;
  *) info "Not running installers";;
esac

echo ""
install_dotfiles

echo ""
echo "  Everything in place, have fun!"

exit 0


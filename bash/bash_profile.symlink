# .bash_profile

# Autocorrect typos in path names when using `cd`
shopt -s cdspell

# Always append to history...
shopt -s histappend

# ... and write it down after each command
PROMPT_COMMAND="history -a;$PROMPT_COMMAND"

### Build PATH variable
PATH="/usr/local/sbin":$PATH
PATH="~/bin":$PATH
export PATH

# Also export HOSTNAME
export HOSTNAME

# Source profile snippets outsourced to their own files
for file in ~/.bash_{colors,exports,aliases,functions,prompt}
do
  [ -r "$file" ] && [ -f "$file" ] && source "$file";
done
unset file

# Source bash completion installed by homebrew
[[ -r "/usr/local/etc/profile.d/bash_completion.sh" ]] && . "/usr/local/etc/profile.d/bash_completion.sh"

# Add `killall` tab completion for common apps
complete -o "nospace" -W "Contacts Calendar Dock Finder Mail Safari iTunes SystemUIServer Terminal Twitter" killall;


### Application specific initializations
# Add completion for gh cli
if type gh >/dev/null 2>&1
then
  eval "$(gh completion -s bash)"
fi


# GOPATH initialization
if which go >/dev/null 2>&1
then
   export GOPATH=$HOME/Developer/go
   PATH="${GOPATH/bin}":$PATH
fi


# git-achievements
if [ -d $HOME/.git-achieve ]
then
  export GIT_ACHIEVEMENTS_HOME=$HOME/.git-achieve
  PATH="${PATH}":"${GIT_ACHIEVEMENTS_HOME}"
  alias git="git-achievements"
fi


# Packer cache directory and Vagrant Cloud token
export PACKER_CACHE_DIR=$HOME/.packer.d/packer_cache
[ -f $HOME/.vagrant.d/vcloud_token.sh ] && source $HOME/.vagrant.d/vcloud_token.sh


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/usr/local/Caskroom/miniconda/base/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/usr/local/Caskroom/miniconda/base/etc/profile.d/conda.sh" ]; then
        . "/usr/local/Caskroom/miniconda/base/etc/profile.d/conda.sh"
    else
        export PATH="/usr/local/Caskroom/miniconda/base/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# Source a platform specific bash profile if available
[ -f "${HOME}/.bash_profile.$(uname -s)" ] && source "${HOME}/.bash_profile.$(uname -s)"

# Source a local non-versioned bash profile script if available
[ -f "${HOME}/.bash_profile.local" ] && source "${HOME}/.bash_profile.local"

true

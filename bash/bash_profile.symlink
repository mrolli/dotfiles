# .bash_profile

# Exports
export LSCOLORS=Dxfxcxdxbxegedabagacad
export TERM=xterm-256color
export EDITOR=vim
export SVNEDITOR=vim
# Prefer US English and use UTF-8.
export LANG='en_US.UTF-8'
export LC_ALL='en_US.UTF-8'
# Highlight section titles in manual pages.
export LESS_TERMCAP_md="${yellow}"
# Donâ€™t clear the screen after quitting a manual page.
export MANPAGER='less -X'
# Keep plenty of history.
export HISTSIZE=1000000
export HISTFILESIZE=${HISTSIZE}
export HISTCONTROL=ignoreboth
# Shortcut to the dotfiles path
export DOTF=$HOME/.dotfiles
# rbenv initiation (done before next PATH statement!)
if type rbenv >/dev/null 2>&1; then
   eval "$(rbenv init -)"
fi

# Alias hub to git if available
if type hub >/dev/null 2>&1;
then
  eval "$(hub alias -s)"
fi

# Always append to histroy...
shopt -s histappend
# ... and write it down after each command
PROMPT_COMMAND="history -a;$PROMPT_COMMAND"

# Incremental search in history using up/down keys
bind '"\e[A":history-search-backward'
bind '"\e[B":history-search-forward'

# colored ls output
if test "$(uname)" = "Darwin"
then
  alias ls='ls -G'
else
  alias ls='ls --color'
fi

# setup alias vi instead of using /usr/bin/vi
# due to exit code issues on macOS
alias vi="vim"
# brewup onliner to keep things up2date
alias brewup='brew update && brew upgrade && brew cleanup; brew doctor'

# source bash completion installed by homebrew if available
if [ -f $(brew --prefix)/etc/bash_completion ]; then
. $(brew --prefix)/etc/bash_completion
fi

# gopath initialization
if which go >/dev/null 2>&1
then
   export GOPATH=$HOME/Developer/go
   export PATH=$GOPATH/bin:$PATH
fi

# function wrapper to issue IPMI commands; password stored in ~/.ipmi.pass
ipmi() { local host; if [ -n "$1" ]; then host=$1; shift; ipmitool -I lanplus -H ${host}.mgmt.unibe.ch -U root -f ~/.ipmi.pass $*; else echo "Usage: ipmi <hostname> <commands/options>"; fi }

# function wrapper to open serial over lan connection; password stored in ~/.ipmi.pass
isol() { if [ -n "$1" ]; then ipmitool -I lanplus -H $1.mgmt.unibe.ch -U root -f ~/.ipmi.pass sol set enabled true; ipmitool -I lanplus -H $1.mgmt.unibe.ch -U root -f ~/.ipmi.pass -e! sol activate; else echo "Usage: isol <hostname>"; fi }


# git-achievements
export GIT_ACHIEVEMENTS_HOME=$HOME/.git-achieve
export PATH="${PATH}":"${GIT_ACHIEVEMENTS_HOME}"
alias git="git-achievements"


GIT_PS1_SHOWDIRTYSTATE=true
GIT_PS1_SHOWUNTRACKEDFILES=true
GIT_PS1_SHOWUPSTREAM="auto verbose"

# build command prompt
ps1_prompt() {
    local ps1_exit=$?
    local ps1_status="\!"
    local YELLOW="\[\033[1;33m\]"
    local GREEN="\[\033[32m\]"
    local RED="\[\033[31m\]"
    local LRED="\[\033[1;31m\]"
    local LBLUE="\[\033[1;34m\]"
    local BLUE="\[\033[34m\]"
    local NOCLR="\[\033[0m\]"
    # see https://misc.flogisoft.com/bash/tip_colors_and_formatting

    # define user/hosts and directory string
    if [ $UID -eq 0 ]; then
        local HOSTCOLOR=$RED
        local PSEND="#"
    else
        local HOSTCOLOR=$GREEN
        local PSEND="\$"
    fi
    local ps1_host=" ${HOSTCOLOR}\u@\h${NOCLR}"
    local ps1_dir=" ${YELLOW}\W${NOCLR}"

    # setup exit status string
    if [ $ps1_exit -ne 0 ]; then
        local ps1_status="${RED}\!${NOCLR}"
    fi

    # setup git repo string
    ps1_git=""
    if test "$(type -t __git_ps1)" = "function"; then
        ps1_git="${RED}"$(__git_ps1)"${NOCLR}"
    fi

    # setup conda env
    ps1_conda=""
    if [ ! -z $CONDA_DEFAULT_ENV ]; then
      ps1_conda=" ${LBLUE}(${CONDA_DEFAULT_ENV})${NOCLR}"
    fi

    PS1="${ps1_status}${ps1_conda}${ps1_host}${ps1_dir}${ps1_git} \$ "
}
# preserve earlier PROMPT_COMMAND entries
PROMPT_COMMAND="ps1_prompt;$PROMPT_COMMAND"

# Build path
export PATH=/usr/local/sbin:$PATH
export PATH=$DOTF/bin:$PATH


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/usr/local/Caskroom/miniconda/base/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/usr/local/Caskroom/miniconda/base/etc/profile.d/conda.sh" ]; then
        . "/usr/local/Caskroom/miniconda/base/etc/profile.d/conda.sh"
    else
        export PATH="/usr/local/Caskroom/miniconda/base/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

